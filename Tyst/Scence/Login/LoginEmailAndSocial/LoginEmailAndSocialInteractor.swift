//
//  LoginEmailAndSocialInteractor.swift
//  WhiteLabelApp
//
//  Created by hb on 16/09/19.
//  Copyright (c) 2019 hb. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

/// Protocol for Login Email Social API
protocol LoginEmailAndSocialBusinessLogic {
    /// Call Login with email API
    ///
    /// - Parameter request: Login email Social Request
    func loginWithEmail(request: LoginEmailAndSocialModel.Request)
    /// Call Add Bank Account Api
    ///
    /// - Parameter request: Login email Social Request
    func addBankAccount(request: AddBankAccount.Request)
    /// Call social login API
    ///
    /// - Parameter request: Login email Social Request
    func socialLogin(request: LoginEmailAndSocialModel.SocialRequest)
    
    /// Call fetch transaction API
    ///
    /// - Parameter request: Login email Social Request
    func fetchTrnasaction(request: FetchTransaction.Request)
    
    func resendAPI(request: ResendLink.Request)
}

/// Protocol for Login Email Social Data Store
protocol LoginEmailAndSocialDataStore {
    
}

/// Class for Login Email  Social Interactor
class LoginEmailAndSocialInteractor: LoginEmailAndSocialBusinessLogic, LoginEmailAndSocialDataStore {
    /// Presentor instance
    var presenter: LoginEmailAndSocialPresentationLogic?
    /// Worker instance
    var worker: LoginEmailAndSocialWorker?
    
    /// Call Login with email API
    ///
    /// - Parameter request: Login email Social Request
    func loginWithEmail(request: LoginEmailAndSocialModel.Request) {
        worker = LoginEmailAndSocialWorker()
        worker?.login(request: request, completionHandler: { (response, message, success) in
            self.presenter?.presentLoginResponse(response: response, message: message ?? "", success: success ?? "0")
        })
    }
    
    /// Call Add Bank Account Api
    ///
    /// - Parameter request: Login email Social Request
    func addBankAccount(request: AddBankAccount.Request) {
        worker = LoginEmailAndSocialWorker()
        worker?.addBankAccount(request: request, completionHandler: { (response, message, success) in
            self.presenter?.presentAddBankAccountResponse(response: response, message: message ?? "", success: success ?? "")
        })
    }
    
    /// Call social login API
    ///
    /// - Parameter request: Login email Social Request
    func socialLogin(request: LoginEmailAndSocialModel.SocialRequest) {
        worker = LoginEmailAndSocialWorker()
        worker?.socialLogin(request: request, completionHandler: { (response, message, success) in
            self.presenter?.presentSocialLoginResponse(response: response, message: message ?? "", success: success ?? "0")
        })
    }
    
    /// Call fetch transaction API
    ///
    /// - Parameter request: Login email Social Request
    func fetchTrnasaction(request: FetchTransaction.Request) {
        worker = LoginEmailAndSocialWorker()
        worker?.fetchTransactionDetail(request: request, completionHandler: { (message, success) in
            self.presenter?.presentFetchTransactionResponse(message: message ?? "", success: success ?? "")
        })
    }
    
    func resendAPI(request: ResendLink.Request) {
        worker = LoginEmailAndSocialWorker()
        worker?.resendEmail(request: request, completionHandler: { (message, success) in
            self.presenter?.presentResendLink(message: message ?? "", Success: success ?? "0")
        })
    }
}
