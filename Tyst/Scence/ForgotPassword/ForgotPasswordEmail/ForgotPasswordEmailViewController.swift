//
//  ForgotPasswordEmailViewController.swift
//  WhiteLabelApp
//
//  Created by hb on 19/09/19.
//  Copyright (c) 2019 hb. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

/// Protocol for presenting response
protocol ForgotPasswordEmailDisplayLogic: class {
    /// Did Receive Forgot Password Response
    ///
    /// - Parameters:
    ///   - message: API Message
    ///   - successCode: API Success
    func didReceiveForgotPasswordResponse(message: String, success: String)
}

/// This class is used for asking user to enter email address so they can initiate forgot password process.
class ForgotPasswordEmailViewController: BaseViewController {
    /// Interactor for API Call
    var interactor: ForgotPasswordEmailBusinessLogic?
    
    @IBOutlet weak var btnSend: WLButton!
    @IBOutlet weak var txtEmail: CustomTextField!
    // MARK: Object lifecycle
    
     /// Override method to initialize with nib
    ///
    /// - Parameters:
    ///   - nibNameOrNil: Nib name
    ///   - nibBundleOrNil: Bundle in which nib is present
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
   /// Decoder
    ///
    /// - Parameter aDecoder: Decoder
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    /// Instance
    ///
    /// - Returns: ForgotPasswordEmailViewController
    class func instance() -> ForgotPasswordEmailViewController? {
        return StoryBoard.ForgotPasswordEmail.board.instantiateViewController(withIdentifier: AppClass.ForgotPasswordEmailVC.rawValue) as? ForgotPasswordEmailViewController
    }
    
    // MARK: Setup
    
    /// Set Up For API Calls 
    private func setup() {
        let viewController = self
        let interactor = ForgotPasswordEmailInteractor()
        let presenter = ForgotPasswordEmailPresenter()
        viewController.interactor = interactor
        interactor.presenter = presenter
        presenter.viewController = viewController
    }
    
    // MARK: View lifecycle
    
    /// Method is called when view loads
    override func viewDidLoad() {
        super.viewDidLoad()
        setUpLayout() 
    }
  
     /// Method is called when view did appear
    override func viewDidAppear(_ animated: Bool) {
        super.viewDidAppear(animated)
        self.txtEmail.becomeFirstResponder()
    }
    
    // SetUpLayout initial UI setup
    func setUpLayout() {
        self.navigationItem.title = AlertMessage.ForgotPasswordTitle
    }
    
    /// Validiate all fields and call login api
    func validateFields() {
        guard self.internetAvailable() else {
            return
        }
        do {
            let email = try txtEmail.validatedText(validationType: ValidatorType.email)
            self.interactor?.forgotPassword(email: email)
        } catch(let error) {
            self.showTopMessage(message: (error as? ValidationError)?.message, type: .Error)
        }
    }
    
    /// Button Send tap action
    ///
    /// - Parameter sender: WLButton
    @IBAction func btnSendTapAction(_ sender: Any) {
        validateFields()
    }
    
}

extension ForgotPasswordEmailViewController: ForgotPasswordEmailDisplayLogic {
    /// Did Receive Forgot Password Response
    ///
    /// - Parameters:
    ///   - message: API Message
    ///   - successCode: API Success
    func didReceiveForgotPasswordResponse(message: String, success: String) {
        if success == "1" {
            self.showTopMessage(message: message, type: .Success, displayDuration:8)
            self.navigationController?.popViewController(animated: true)
        } else {
            self.showTopMessage(message: message, type: .Error)
        }
    }
}
