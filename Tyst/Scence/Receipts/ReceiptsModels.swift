//
//  ReceiptsModels.swift
//  Tyst
//
//  Created by hb on 06/11/19.
//  Copyright (c) 2019 hb. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

enum Receipts {
    struct Request {
        var category: String
        var name: String
        var location: String
        var stateId: String
        var zipCode: String
        var amount: String
        var date: String
        var tax: String
        var lat: String
        var long: String
        var imageArray: [UIImage]
        var imageCount : String
    }
}


enum CategoryList {
    
    class ViewModel: WSResponseData {
        var category : String?
        var category_id : String?
        

        /// Enum for Reponse
        enum CodingKeys: String, CodingKey {
            /// State Key
            case category
            /// State ID
            case category_id

        }
        
        /// Default Init Methods
        ///
        /// - Parameter decoder: Decoder
        /// - Throws: throws exception if found error
        required init(from decoder: Decoder) throws {
            try super.init(from: decoder)
            let values = try decoder.container(keyedBy: CodingKeys.self)
            category = try values.decodeIfPresent(String.self, forKey: .category)
            category_id = try values.decodeIfPresent(String.self, forKey: .category_id)
            
        }
        
        /// Default encode method
        ///
        /// - Parameter encoder: Encoder
        /// - Throws:throws exception if found error
        public override func encode(to encoder: Encoder) throws {
            try super.encode(to: encoder)
            var container = encoder.container(keyedBy: CodingKeys.self)
            try container.encode(category, forKey: .category)
            try container.encode(category_id, forKey: .category_id)
        }
    }
}
